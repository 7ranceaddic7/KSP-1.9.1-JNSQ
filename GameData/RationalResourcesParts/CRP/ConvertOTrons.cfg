// Adjust CoreHeat in Convert-O-Trons
@PART[MiniISRU,ISRU]:NEEDS[!Kerbalism]
{
	@MODULE[ModuleCoreHeat]
	{
		@CoreTempGoal = 1000
		@CoreShutdownTemp = 4000
		@MaxCoolant = 200
	}
	
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]
	{
		@TemperatureModifier
		{
			!key,* = nope
			key = 0 100000
			key = 750 50000
			key = 1000 10000
			key = 1250 500
			key = 2000 50
			key = 4000 0
		}
		@ThermalEfficiency
		{
			!key,* = nope
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 1000 1.0 0 0
			key = 1250 0.1 0 0
			key = 3000 0 0 0 
		}
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@Ratio = 0.5
		}
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]
		{
			@Ratio = 30
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@Ratio = 0.45
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.55
			@DumpExcess = True
		}
	}
}

// Populate all Convert-O-Trons if Kerbalism absent
@PART[MiniISRU,ISRU]:NEEDS[!Kerbalism]
{
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Kerolox B // using moles
		@StartActionName = Start ISRU [Kerolox B]
		@StopActionName = Stop ISRU [Kerolox B]
		@ToggleActionName = Toggle ISRU [Kerolox B]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.3699 // 13
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 0.4501 // 12
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@Ratio = 0.0341 // 1
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.0768 // 12
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Kerosene // using kilos
		@StartActionName = Start ISRU [Kerosene]
		@StopActionName = Stop ISRU [Kerosene]
		@ToggleActionName = Toggle ISRU [Kerosene]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 1.85
		}
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.345
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@Ratio = 0.3712
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Hydrolox // using kilos
		@StartActionName = Start ISRU [Hydrolox]
		@StopActionName = Stop ISRU [Hydrolox]
		@ToggleActionName = Toggle ISRU [Hydrolox]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Water
			@Ratio = 3.6
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.888
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.0592
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Methalox // using kilos
		@StartActionName = Start ISRU [Methalox]
		@StopActionName = Stop ISRU [Methalox]
		@ToggleActionName = Toggle ISRU [Methalox]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 3.765
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 2.51
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdMethane
			@Ratio = 3.772
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.32
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = LqdAmmonia // using moles
		@StartActionName = Start ISRU [LqdAmmonia]
		@StopActionName = Stop ISRU [LqdAmmonia]
		@ToggleActionName = Toggle ISRU [LqdAmmonia]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.8536 // 30
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.3396 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdAmmonia
			@Ratio = 0.4851 // 20
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = MonoPropellant // using moles
		@StartActionName = Start ISRU [MonoPropellant A]
		@StopActionName = Stop ISRU [MonoPropellant A]
		@ToggleActionName = Toggle ISRU [MonoPropellant A]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.5691 // 20
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.3396 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = MonoPropellant
			@Ratio = 0.0427 // 10
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = MonoPropellant + Hydrogen // using moles
		@StartActionName = Start ISRU [MonoPropellant B]
		@StopActionName = Stop ISRU [MonoPropellant B]
		@ToggleActionName = Toggle ISRU [MonoPropellant B]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdAmmonia
			@Ratio = 0.4851 // 20
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = MonoPropellant
			@Ratio = 0.0427 // 10
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.2845 // 10
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Carbon Extractor // using moles
		@StartActionName = Start ISRU [Carbon Extractor]
		@StopActionName = Stop ISRU [Carbon Extractor]
		@ToggleActionName = Toggle ISRU [Carbon Extractor]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]] // 1:1
		{
			@Ratio = 0.0601 // 2.8985
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Carbon
			@Ratio = 0.1201 // 50
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = CO2 Fuser // using moles
		@StartActionName = Start ISRU [CO2 Fuser]
		@StopActionName = Stop ISRU [CO2 Fuser]
		@ToggleActionName = Toggle ISRU [CO2 Fuser]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Carbon
			@Ratio = 0.024 // 10
		}
		INPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 22.69504 // 10
			FlowMode = STAGE_PRIORITY_FLOW
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = CarbonDioxide
			@Ratio = 22.5818 // 10
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = CO2 Splitter // using moles
		@StartActionName = Start ISRU [CO2 Splitter]
		@StopActionName = Stop ISRU [CO2 Splitter]
		@ToggleActionName = Toggle ISRU [CO2 Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = CarbonDioxide
			@Ratio = 22.5818 // 10
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Oxygen
			@Ratio = 22.69504 // 10
		}
		
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Carbon
			@Ratio = 0.024 // 10
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Hydrates Splitter // using moles
		@StartActionName = Start ISRU [Hydrates Splitter]
		@StopActionName = Stop ISRU [Hydrates Splitter]
		@ToggleActionName = Toggle ISRU [Hydrates Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Hydrates
			@Ratio = 0.3014 // 2.6803
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Water
			@Ratio = 0.1802 // 1
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = XenonGas
			@Ratio = 0.0144 // 0.011; nerfed for gameplay balance
			%DumpExcess = True
		}
		+OUTPUT_RESOURCE,0:NEEDS[NearFuturePropulsion]
		{
			@ResourceName = ArgonGas
			@Ratio = 0.8957 // 0.02; nerfed to 1/100 for gameplay balance
		}
		+OUTPUT_RESOURCE,0
		{
			@ResourceName = MetalOre
			@Ratio = 0.0129 // 3
		}
		+OUTPUT_RESOURCE,0
		{
			@ResourceName = Oxygen
			@Ratio = 68.0851 // 3
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Water Splitter // using kilos
		@StartActionName = Start ISRU [Water Splitter]
		@StopActionName = Stop ISRU [Water Splitter]
		@ToggleActionName = Toggle ISRU [Water Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Water
			@Ratio = 1.8
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Hydrogen
			@Ratio = 224.25
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Oxygen
			@Ratio = 113.48
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Alumina Splitter // using moles
		@StartActionName = Start ISRU [Alumina Splitter]
		@StopActionName = Stop ISRU [Alumina Splitter]
		@ToggleActionName = Toggle ISRU [Alumina Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Alumina
			@Ratio = 0.2562 // 10
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Metal
			@Ratio = 0.1002 // 7
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Oxygen
			@Ratio = 113.4752 // 5
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Monazite Splitter // using moles
		@StartActionName = Start ISRU [Monazite Splitter]
		@StopActionName = Stop ISRU [Monazite Splitter]
		@ToggleActionName = Toggle ISRU [Monazite Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Monazite
			@Ratio = 0.0468 // 1
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = RareMetals
			@Ratio = 0.025 // 1
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Phosphorus
			@Ratio = 0.0062 // 1
		}
		+OUTPUT_RESOURCE,0
		{
			@ResourceName = Oxygen
			@Ratio = 22.695 // 1
		}
	}
}

@PART[rr_boxblue_long,rr_boxblue] // Populate these in spite of Kerbalism
{
	+MODULE[ModuleResourceConverter],0:NEEDS[Kerbalism,ProfileDefault]
	{
		@ConverterName = Oxidizer (Kerbalism) // using moles
		@StartActionName = Start ISRU [Oxidizer (Kerbalism)]
		@StopActionName = Stop ISRU [Oxidizer (Kerbalism)]
		@ToggleActionName = Toggle ISRU [Oxidizer (Kerbalism)]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.2561 // 9
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 0.2524 // 9
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.0612 // 9.5625
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Kerolox B // using moles
		@StartActionName = Start ISRU [Kerolox B]
		@StopActionName = Stop ISRU [Kerolox B]
		@ToggleActionName = Toggle ISRU [Kerolox B]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.3699 // 13
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 0.4501 // 12
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@Ratio = 0.0341 // 1
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.0768 // 12
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Kerosene // using kilos
		@StartActionName = Start ISRU [Kerosene]
		@StopActionName = Stop ISRU [Kerosene]
		@ToggleActionName = Toggle ISRU [Kerosene]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 1.85
		}
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.345
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@Ratio = 0.3712
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Hydrolox // using kilos
		@StartActionName = Start ISRU [Hydrolox]
		@StopActionName = Stop ISRU [Hydrolox]
		@ToggleActionName = Toggle ISRU [Hydrolox]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Water
			@Ratio = 3.6
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.888
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.0592
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Methalox // using kilos
		@StartActionName = Start ISRU [Methalox]
		@StopActionName = Stop ISRU [Methalox]
		@ToggleActionName = Toggle ISRU [Methalox]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 3.765
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 2.51
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdMethane
			@Ratio = 3.772
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@Ratio = 0.32
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = LqdAmmonia // using moles
		@StartActionName = Start ISRU [LqdAmmonia]
		@StopActionName = Stop ISRU [LqdAmmonia]
		@ToggleActionName = Toggle ISRU [LqdAmmonia]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.8536 // 30
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.3396 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = LqdAmmonia
			@Ratio = 0.4851 // 20
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = MonoPropellant // using moles
		@StartActionName = Start ISRU [MonoPropellant A]
		@StopActionName = Stop ISRU [MonoPropellant A]
		@ToggleActionName = Toggle ISRU [MonoPropellant A]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.5691 // 20
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.3396 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = MonoPropellant
			@Ratio = 0.0427 // 10
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = MonoPropellant + Hydrogen // using moles
		@StartActionName = Start ISRU [MonoPropellant B]
		@StopActionName = Stop ISRU [MonoPropellant B]
		@ToggleActionName = Toggle ISRU [MonoPropellant B]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdAmmonia
			@Ratio = 0.4851 // 20
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = MonoPropellant
			@Ratio = 0.0427 // 10
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.2845 // 10
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Carbon Extractor // using moles
		@StartActionName = Start ISRU [Carbon Extractor]
		@StopActionName = Stop ISRU [Carbon Extractor]
		@ToggleActionName = Toggle ISRU [Carbon Extractor]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]] // 1:1
		{
			@Ratio = 0.0601 // 2.8985
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Carbon
			@Ratio = 0.1201 // 50
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = CO2 Fuser // using moles
		@StartActionName = Start ISRU [CO2 Fuser]
		@StopActionName = Stop ISRU [CO2 Fuser]
		@ToggleActionName = Toggle ISRU [CO2 Fuser]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Carbon
			@Ratio = 0.024 // 10
		}
		INPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 22.69504 // 10
			FlowMode = STAGE_PRIORITY_FLOW
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = CarbonDioxide
			@Ratio = 22.5818 // 10
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = CO2 Splitter // using moles
		@StartActionName = Start ISRU [CO2 Splitter]
		@StopActionName = Stop ISRU [CO2 Splitter]
		@ToggleActionName = Toggle ISRU [CO2 Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = CarbonDioxide
			@Ratio = 22.5818 // 10
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Oxygen
			@Ratio = 22.69504 // 10
		}
		
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Carbon
			@Ratio = 0.024 // 10
			@DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Hydrates Splitter // using moles
		@StartActionName = Start ISRU [Hydrates Splitter]
		@StopActionName = Stop ISRU [Hydrates Splitter]
		@ToggleActionName = Toggle ISRU [Hydrates Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Hydrates
			@Ratio = 0.3014 // 2.6803
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Water
			@Ratio = 0.1802 // 1
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = XenonGas
			@Ratio = 0.0144 // 0.011; nerfed for gameplay balance
			%DumpExcess = True
		}
		+OUTPUT_RESOURCE,0:NEEDS[NearFuturePropulsion]
		{
			@ResourceName = ArgonGas
			@Ratio = 0.8957 // 0.02; nerfed to 1/100 for gameplay balance
		}
		+OUTPUT_RESOURCE,0
		{
			@ResourceName = MetalOre
			@Ratio = 0.0129 // 3
		}
		+OUTPUT_RESOURCE,0
		{
			@ResourceName = Oxygen
			@Ratio = 68.0851 // 3
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Water Splitter // using kilos
		@StartActionName = Start ISRU [Water Splitter]
		@StopActionName = Stop ISRU [Water Splitter]
		@ToggleActionName = Toggle ISRU [Water Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Water
			@Ratio = 1.8
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Hydrogen
			@Ratio = 224.25
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Oxygen
			@Ratio = 113.48
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Alumina Splitter // using moles
		@StartActionName = Start ISRU [Alumina Splitter]
		@StopActionName = Stop ISRU [Alumina Splitter]
		@ToggleActionName = Toggle ISRU [Alumina Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Alumina
			@Ratio = 0.2562 // 10
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = Metal
			@Ratio = 0.1002 // 7
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Oxygen
			@Ratio = 113.4752 // 5
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Monazite Splitter // using moles
		@StartActionName = Start ISRU [Monazite Splitter]
		@StopActionName = Stop ISRU [Monazite Splitter]
		@ToggleActionName = Toggle ISRU [Monazite Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = Monazite
			@Ratio = 0.0468 // 1
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@ResourceName = RareMetals
			@Ratio = 0.025 // 1
			%DumpExcess = True
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]
		{
			@ResourceName = Phosphorus
			@Ratio = 0.0062 // 1
		}
		+OUTPUT_RESOURCE,0
		{
			@ResourceName = Oxygen
			@Ratio = 22.695 // 1
		}
	}
	@MODULE[ModuleResourceConverter],0:NEEDS[Kerbalism,ProfileDefault]
	{
		@ConverterName = LiquidFuel (Kerbalism) // using moles
		@StartActionName = Start ISRU [LiquidFuel (Kerbalism)]
		@StopActionName = Stop ISRU [LiquidFuel (Kerbalism)]
		@ToggleActionName = Toggle ISRU [LiquidFuel (Kerbalism)]
		@INPUT_RESOURCE:HAS[#ResourceName[Ore]]
		{
			@ResourceName = LqdMethane
			@Ratio = 0.7184 // 19.048
		}
		@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]
		{
			@Ratio = 0.0612 // 1.795
		}
		!OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}
	}
}

// Downscale throughput in small Convert-O-Trons
@PART[rr_boxblue]
{
	@MODULE[ModuleResourceConverter],*
	{
		@INPUT_RESOURCE:HAS[~ResourceName[ElectricCharge]],*
		{
			@Ratio *= 0.6
		}
		@OUTPUT_RESOURCE,*
		{
			@Ratio *= 0.6
		}
	}
}

@PART[MiniISRU]:NEEDS[!Kerbalism]
{
	@MODULE[ModuleCoreHeat]
	{
		@CoreTempGoal = 1000
		@CoreShutdownTemp = 3000
		@MaxCoolant = 60
	}
	
	@MODULE[ModuleResourceConverter],*
	{
		@TemperatureModifier
		{
			!key,* = nope
			key = 0 25000
			key = 750 6000
			key = 1000 3000
			key = 1500 500
			key = 2000 50
			key = 4000 0
		}
		@INPUT_RESOURCE,*
		{
			@Ratio *= 0.25
		}
		@OUTPUT_RESOURCE,*
		{
			@Ratio *= 0.25
		}
	}
}

// Populate Cryo Prep Converter
@PART[rr_boxblue_flat]
{
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze CarbonDioxide
		@StartActionName = Start Freezer CarbonDioxide
		@StopActionName = Stop Freezer CarbonDioxide
		@ToggleActionName = Toggle Freezer CarbonDioxide
		@INPUT_RESOURCE,0
		{
			@ResourceName = CarbonDioxide
			@Ratio = 225.58
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = LqdCO2
			@Ratio = 0.38
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze Hydrogen
		@StartActionName = Start Freezer Hydrogen
		@StopActionName = Stop Freezer Hydrogen
		@ToggleActionName = Toggle Freezer Hydrogen
		@INPUT_RESOURCE,0
		{
			@ResourceName = Hydrogen
			@Ratio = 224.25
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.28
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze Methane
		@StartActionName = Start Freezer Methane
		@StopActionName = Stop Freezer Methane
		@ToggleActionName = Toggle Freezer Methane
		@INPUT_RESOURCE,0
		{
			@ResourceName = Methane
			@Ratio = 223.88
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = LqdMethane
			@Ratio = 0.38
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze Nitrogen
		@StartActionName = Start Freezer Nitrogen
		@StopActionName = Stop Freezer Nitrogen
		@ToggleActionName = Toggle Freezer Nitrogen
		@INPUT_RESOURCE,0
		{
			@ResourceName = Nitrogen
			@Ratio = 223.93
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = LqdNitrogen
			@Ratio = 0.34
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze Oxidizer
		@StartActionName = Start Freezer Oxidizer
		@StopActionName = Stop Freezer Oxidizer
		@ToggleActionName = Toggle Freezer Oxidizer
		@INPUT_RESOURCE,0
		{
			@ResourceName = Oxygen
			@Ratio = 226.95
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = Oxidizer
			@Ratio = 0.28
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Freeze Oxygen
		@StartActionName = Start Freezer Oxygen
		@StopActionName = Stop Freezer Oxygen
		@ToggleActionName = Toggle Freezer Oxygen
		@INPUT_RESOURCE,0
		{
			@ResourceName = Oxygen
			@Ratio = 226.95
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = LqdOxygen
			@Ratio = 0.28
		}
	}
}

// Populate Heater Converter
@PART[rr_boxred_flat]
{
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Thaw CarbonDioxide
		@StartActionName = Start Heater CarbonDioxide
		@StopActionName = Stop Heater CarbonDioxide
		@ToggleActionName = Toggle Heater CarbonDioxide
		@INPUT_RESOURCE,0
		{
			@ResourceName = LqdCO2
			@Ratio = 0.38
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = CarbonDioxide
			@Ratio = 225.58
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Thaw Hydrogen
		@StartActionName = Start Heater Hydrogen
		@StopActionName = Stop Heater Hydrogen
		@ToggleActionName = Toggle Heater Hydrogen
		@INPUT_RESOURCE,0
		{
			@ResourceName = LqdHydrogen
			@Ratio = 0.28
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = Hydrogen
			@Ratio = 224.25
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Thaw Methane
		@StartActionName = Start Heater Methane
		@StopActionName = Stop Heater Methane
		@ToggleActionName = Toggle Heater Methane
		@INPUT_RESOURCE,0
		{
			@ResourceName = LqdMethane
			@Ratio = 0.38
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = Methane
			@Ratio = 223.88
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Thaw Nitrogen
		@StartActionName = Start Heater Nitrogen
		@StopActionName = Stop Heater Nitrogen
		@INPUT_RESOURCE,0
		{
			@ResourceName = LqdNitrogen
			@Ratio = 0.34
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = Nitrogen
			@Ratio = 223.93
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Thaw Oxidizer
		@StartActionName = Start Heater Oxidizer
		@StopActionName = Stop Heater Oxidizer
		@ToggleActionName = Toggle Heater Oxidizer
		@INPUT_RESOURCE,0
		{
			@ResourceName = Oxidizer
			@Ratio = 0.28
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = Oxygen
			@Ratio = 226.95
		}
	}
	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Thaw Oxygen
		@StartActionName = Start Heater Oxygen
		@StopActionName = Stop Heater Oxygen
		@ToggleActionName = Toggle Heater Oxygen
		@INPUT_RESOURCE,0
		{
			@ResourceName = LqdOxygen
			@Ratio = 0.28
		}
		@OUTPUT_RESOURCE
		{
			@ResourceName = Oxygen
			@Ratio = 226.95
		}
	}
}

@PART[ISRU,MiniISRU]:AFTER[SimpleConstruction]:NEEDS[!Kerbalism]
{
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[Metal]]
	{
		@INPUT_RESOURCE,0
		{
			@ResourceName = MetalOre
		}
	}
}
