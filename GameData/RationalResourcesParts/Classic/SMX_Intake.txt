// Stockalike Mining Expansion
@PART[SMX_Size?AtmCondenser]:NEEDS[MiningExpansion,ClassicStock]
{
	MODULE
	{
		name = WBIModuleResourceHarvester
		// List of harvest types: Planetary, Oceanic, Atmospheric, Exospheric. You can have more than one harvest type. Separate the types with a semicolon.
		// This overrides HarversterType from the base class. There is a precedence based on vessel situation and supported harvest types:
		// Landed: Atmospheric before Planetary
		// Splashed: Oceanic before Planetary
		// In space: Exospheric before Atmospheric
		harvestTypes = Atmospheric;Exospheric

		AutoShutdown = true
		ConverterName = Aero/Exo Scoop
		StartActionName = Start Aero/Exo Scoop
		StopActionName = Stop Aero/Exo Scoop
		ToggleActionName = Toggle Aero/Exo Scoop
		intakeTransformName = Intake
		intakeSpeed = 20
		airStaticSpeed = 20

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 3
		}
	}
	!MODULE[ModuleResourceHarvester],* {}
	+MODULE[ModuleResourceIntake]
	{
		@resourceName = Atmosphere
		@checkForOxygen = False
	}
	+MODULE[ModuleResourceIntake]
	{
		@resourceName = IntakeLqd
		@checkForOxygen = False
		underwaterOnly = True
	}
	+RESOURCE[IntakeAir]
	{
		@name = Atmosphere
	}
	+RESOURCE[IntakeAir]
	{
		@name = IntakeLqd
	}
}
@PART[SMX_Size2AtmCondenser]:NEEDS[MiningExpansion,ClassicStock]
{
	@MODULE[WBIModuleResourceHarvester]
	{
		@intakeSpeed *= 4
		@airStaticSpeed *= 4

		@INPUT_RESOURCE
		{
			@Ratio *= 4
		}
	}
}

@PART[SMX_*Pump]:NEEDS[MiningExpansion,ClassicStock]
{
	MODEL // using this for its intakeTransformName
	{
		model = Squad/Parts/Aero/miniIntake/SmallIntake
		scale = 0.1, 0.1, 0.1
		rotation = 180, 0, 0
	}
	MODULE
	{
		name = ModuleResourceIntake
		resourceName = IntakeLqd
		checkForOxygen = true
		area = 0.001
		@area *= #$../MODULE[ModuleResourceHarvester],0/Efficiency$
		intakeSpeed = 15
		intakeTransformName = Intake // does not exist in SMX parts
		underwaterOnly = True
	}
	RESOURCE
	{
		name = IntakeLqd
		amount = #$../MODULE[ModuleResourceHarvester],0/Efficiency$
		maxAmount = #$amount$
	}
	
	MODULE
	{
		name = WBIModuleResourceHarvester
		// List of harvest types: Planetary, Oceanic, Atmospheric, Exospheric. You can have more than one harvest type. Separate the types with a semicolon.
		// This overrides HarversterType from the base class. There is a precedence based on vessel situation and supported harvest types:
		// Landed: Atmospheric before Planetary
		// Splashed: Oceanic before Planetary
		// In space: Exospheric before Atmospheric
		harvestTypes = Oceanic

		AutoShutdown = true
		ConverterName = Hydro Scoop
		StartActionName = Start Hydro Scoop
		StopActionName = Stop Hydro Scoop
		ToggleActionName = Toggle Hydro Scoop
		intakeSpeed = 20
		@intakeSpeed *= #$../MODULE[ModuleResourceHarvester],0/Efficiency$
		airStaticSpeed = 20
		@airStaticSpeed *= #$../MODULE[ModuleResourceHarvester],0/Efficiency$

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 3
			@Ratio *= #$../MODULE[ModuleResourceHarvester],0/Efficiency$
		}
	}
	!MODULE[ModuleResourceHarvester] {}
}

@PART[SMX_1mInlinePump]:NEEDS[MiningExpansion,ClassicStock]
{
	@MODEL,1
	{
		@rotation = 90, 0, 0
	}
}